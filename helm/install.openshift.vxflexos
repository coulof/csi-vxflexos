#/bin/bash
# Verify the kubernetes installation has the feature gates needed.
#sh ./verify.kubernetes
rc=$?
if [ $rc -ne 0 ] ;
        then echo "*******************************************************************************"
             echo "Warning: Kubernetes --feature-gates not correctly configured... it may not work"
             echo "*******************************************************************************"
             sleep 5
fi


# Make sure the vxflexos-cred has already been established
kubectl get secrets -n vxflexos | grep vxflexos-cred --quiet
if [ $? -ne 0 ];
    then echo "*** YOU MUST PROVIDE VxFlex OS credentials in a Kubernetes secret- see secret.yaml template ***"
    exit 2
fi
# Check for required CustomResourceDefinitions
kubectl get customresourcedefinitions | grep csidrivers --quiet
if [ $? -ne 0 ];
    then echo "installing csidriver CRD"; kubectl create -f csidriver.yaml
fi
kubectl get customresourcedefinitions | grep nodeinfo --quiet
if [ $? -ne 0 ];
    then echo "installing nodeinfo CRD"; kubectl create -f nodeinfo.yaml
fi
helm template --values myvalues.yaml --name vxflexos --set openshift=true --namespace vxflexos ./csi-vxflexos > all.yaml
kubectl apply -f all.yaml
oc adm policy add-scc-to-user privileged -n vxflexos -z vxflexos-node

running=$(kubectl get pods -n vxflexos | grep "Running" | wc -l)
target=$(kubectl get pods -n vxflexos | grep "vxflexos"|wc -l)

while (($running<$target))
do
        running=$(kubectl get pods -n vxflexos | grep "Running" | wc -l)
	target=$(kubectl get pods -n vxflexos | grep "vxflexos"|wc -l)
        echo running $running / $target
        kubectl get pods -n vxflexos
        sleep 10
done

echo "CSIDrivers:"
kubectl get csidrivers
echo "CSINodeInfos:"
kubectl get csinodeinfos
echo "StorageClasses:"
kubectl get storageclass
kubectl get volumesnapshotclass | grep vxflexos-snapclass --quiet
if [ $? -ne 0 ];
    then echo "installing volumesnapshotclass"; kubectl create -f volumesnapshotclass.yaml
fi
echo "VolumeSnapshotClasses:"
kubectl get volumesnapshotclass

#/bin/bash
# Verify the kubernetes installation has the feature gates needed.
export NS=vxflexos
source ./common.bash

sh ./verify.kubernetes
rc=$?
if [ $rc -ne 0 ] ;
        then echo "*******************************************************************************"
             echo "Warning: Kubernetes --feature-gates not correctly configured... it may not work"
             echo "*******************************************************************************"
             sleep 5
fi


# Make sure the vxflexos-cred has already been established
echo kubectl get secrets -n vxflexos | grep vxflexos-cred --quiet
kubectl get secrets -n vxflexos | grep vxflexos-cred --quiet
if [ $? -ne 0 ];
    then echo "*** YOU MUST PROVIDE VxFlex OS credentials in a Kubernetes secret- see secret.yaml template ***"
    exit 2
fi
# Check for required CustomResourceDefinitions
if [ $kMinorVersion == "13" ];
then
	kubectl get customresourcedefinitions | grep csidrivers --quiet
	if [ $? -ne 0 ];
	    then echo "installing csidriver CRD"; kubectl create -f csidriver.yaml
	fi
	kubectl get customresourcedefinitions | grep nodeinfo --quiet
	if [ $? -ne 0 ];
	    then echo "installing nodeinfo CRD"; kubectl create -f nodeinfo.yaml
	fi
fi


echo helm install --values myvalues.yaml --values csi-vxflexos/k8s-${kMajorVersion}.${kMinorVersion}-values.yaml --namespace vxflexos  vxflexos ./csi-vxflexos
helm install --values myvalues.yaml --values csi-vxflexos/k8s-${kMajorVersion}.${kMinorVersion}-values.yaml --namespace vxflexos  vxflexos ./csi-vxflexos

waitOnRunning


echo "CSIDrivers:"
kubectl get csidrivers

if [ $kMinorVersion == "13" ];
then
	echo "CSINodeInfos:"
	kubectl get csinodeinfos
fi 

echo "StorageClasses:"
kubectl get storageclass
